/* --- VARIABLES & BASE STYLES --- */
:root {
    /* Colors - Light Mode (Default) */
    --bg-color: #00FF00;
    --text-color: #000000;
    --box-bg-color: #FFFFFF;
    --box-border-color: #000000;
    --box-content-color: #000000; /* For content inside boxes */
    --overlay-bg-color: rgba(255, 255, 255, 0.8);
    --overlay-text-color: #000000;

    /* Typography */
    --font-family: "Arial Narrow", "Arial Bold", Arial, sans-serif; /* Arial Narrow 우선 */
    --font-stretch-value: 80%; /* 폰트 너비 80% (폰트 지원 여부에 따라 달라질 수 있음) */
    --font-weight: bold; /* Bold로 통일 */

    /* Font Sizes (Updated as per request) */
    --fs-36: 36px;
    --fs-18: 18px;
    --fs-14: 14px;
    --fs-12: 12px;

    /* Sizing */
    --button-height-sm: 32px;
    --button-height-lg: 48px;
    --border-width: 1.5px;

    /* Speech Bubble Tail */
    --tail-left: 50%; /* Default, will be set by JS */
}

.dark-mode {
    --bg-color: #7F7F7F;
    --text-color: #000000; /* As per request, content color remains black */
    --overlay-bg-color: rgba(0, 0, 0, 0.8);
    --overlay-text-color: #FFFFFF;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    /* Apply Arial Narrow Bold and font-stretch to all elements by default */
    font-family: var(--font-family);
    font-weight: var(--font-weight);
    font-stretch: var(--font-stretch-value);
    border-radius: 0 !important; /* 모든 곡률 제거 */
}

body {
    background-color: var(--bg-color);
    color: var(--text-color);
    overflow: hidden; /* Prevent scrollbars from layout shifts */
    transition: background-color 0.3s ease;
    width: 100%;
    height: 100vh; /* Ensure body fills viewport for positioning */
}

/* --- HEADER --- */
.site-header {
    position: fixed;
    top: 20px;
    left: 20px;
    right: 20px;
    display: flex;
    justify-content: space-between; /* 좌측 그룹과 우측 테마 버튼 분리 */
    align-items: center; /* 로고와 버튼들의 상하 정렬을 가운데로 */
    z-index: 1000;
    pointer-events: none; /* Allow clicks to pass through header background */
}

.site-header > * {
    pointer-events: auto; /* Re-enable pointer events for children */
}

.header-left { /* 로고와 네비게이션 버튼들을 묶는 컨테이너 */
    display: flex;
    flex-direction: row; /* 로고와 버튼들을 가로로 나열 */
    align-items: center; /* 로고와 nav의 상하 정렬을 가운데로 */
}

.logo-link { /* 로고를 감싸는 링크 스타일 */
    text-decoration: none; /* 링크 밑줄 제거 */
    color: inherit; /* 폰트 색상 상속 */
    display: block; /* 블록 요소로 만들어 크기 제어 용이 */
}

.logo-box, .nav-button { /* .theme-button, .theme-dropdown은 제외 */
    background-color: var(--box-bg-color);
    border: var(--border-width) solid var(--box-border-color);
    color: var(--box-content-color);
    display: flex;
    align-items: center;
    justify-content: center;
}

.logo-box {
    padding: 10px;
    height: 60px; /* 로고 크기 키움 */
    width: auto; /* 너비는 내용에 맞게 자동 조절 */
}
.logo-box img {
    height: 100%;
    display: block;
}

.header-nav { /* Inkdrop과 About 버튼 컨테이너 */
    display: flex; /* 버튼들을 가로로 나열 */
    flex-direction: row; /* 가로 나열 */
    margin-left: 10px; /* 로고와의 간격 */
}

.nav-button {
    height: var(--button-height-lg);
    padding: 0 20px;
    text-decoration: none;
    font-size: var(--fs-18);
    margin-right: 10px; /* 버튼들 사이의 간격 */
    cursor: pointer;
}
.nav-button:last-child {
    margin-right: 0; /* 마지막 버튼은 오른쪽 마진 없음 */
}

.theme-switcher {
    position: relative;
}

.theme-button {
    height: var(--button-height-lg);
    width: 120px;
    font-size: var(--fs-18);
    cursor: pointer;
    /* 테마 버튼 겉박스 제거 */
    background: none; /* 배경색 제거 */
    border: none; /* 테두리 제거 */
    color: var(--text-color); /* 사이트 내용색 따름 */
    padding: 0; /* 패딩 제거 */
}

.theme-dropdown {
    position: absolute;
    top: calc(100% + 5px);
    right: 0;
    width: 100%;
    flex-direction: column;
    padding: 0; /* 패딩 제거 */
    background: none; /* 배경색 제거 */
    border: none; /* 테두리 제거 */
}
.theme-dropdown button {
    background: none;
    border: none;
    padding: 10px; /* 내부 패딩 유지 */
    font-size: var(--fs-14);
    color: var(--text-color); /* 사이트 내용색 따름 */
    cursor: pointer;
    text-align: center;
    width: 100%;
}
.theme-dropdown button:hover {
    background-color: rgba(0, 0, 0, 0.1); /* 호버 시 약간의 배경색 */
}

/* --- MAIN ARTWORK GRID / GUESTBOOK GRID --- */
#art-grid { /* Main page grid - no fixed height, allows full viewport positioning */
    position: relative;
    width: 100vw;
    height: 100vh; /* Occupy full viewport to contain absolutely positioned children */
    /* Removed overflow-y: auto and padding-top/bottom here */
}

#guestbook-grid { /* Guestbook page grid - still needs controlled height and scroll */
    position: relative;
    width: 100vw;
    height: calc(100vh - 40px - var(--button-height-lg) - 20px - 70px); /* header(top+height+bottom-margin) + footer(height+bottom) + input(height) */
    overflow-y: auto; /* Allow scrolling for content */
    padding: 20px; /* General padding for the grid area */
    padding-top: calc(20px + var(--button-height-lg) + 20px); /* Account for header */
    padding-bottom: calc(20px + 70px); /* Account for footer and input area */
}


.thumbnail-box {
    position: absolute;
    background-color: var(--box-bg-color);
    border: var(--border-width) solid var(--box-border-color);
    color: var(--box-content-color);
    min-width: 150px;
    max-width: 420px;
    cursor: grab; /* Default for draggable, removed for guestbook-entry */
    transition: left 0.2s ease-out, top 0.2s ease-out; /* For persistent push */
    z-index: 10;
}
.thumbnail-box.dragging {
    cursor: grabbing;
    z-index: 999;
    transition: none; /* Disable transition during drag to prevent ghosting */
}
/* Guestbook entries are not draggable */
.thumbnail-box.guestbook-entry {
    cursor: default; /* Not draggable */
}


/* Common content styling for thumbnail boxes that need initial padding */
.thumbnail-box .content.initial-padding {
    padding: 15px; /* Apply padding to content div instead of box */
}

/* Aspect Ratios (example sizes, will be dynamic) */
.ratio-1-1   { width: 300px; height: 300px; }
.ratio-16-9  { width: 420px; height: 236.25px; }
.ratio-4-3   { width: 360px; height: 270px; }
.ratio-3-4   { width: 270px; height: 360px; }
.ratio-9-16  { width: 236.25px; height: 420px; }
.ratio-2-1   { width: 400px; height: 200px; }
.ratio-1-2   { width: 200px; height: 400px; }
.ratio-1-3   { width: 150px; height: 450px; }

/* Box Content Types */
.thumbnail-box .content {
    width: 100%;
    height: 100%;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
}
.thumbnail-box.image-only {
    border-width: 0;
    padding: 0; /* No padding for image only boxes */
}
.image-only img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
}

/* Speech Bubble Design (Rolled back to original black tail, position controlled by JS) */
.speech-bubble {
    position: relative;
    border: var(--border-width) solid var(--box-border-color); /* Main box border */
    background-color: var(--box-bg-color); /* Main box background */
    /* Padding is now handled by .content.initial-padding */
    overflow: visible; /* Ensure pseudo-elements are visible outside */
}
/* Tail: A single black triangle extending from the bottom border */
.speech-bubble::after {
    content: '';
    position: absolute;
    bottom: calc(-15px - var(--border-width)); /* Position below the box, accounting for border */
    left: var(--tail-left); /* Controlled by JS: 10% or 90% */
    transform: translateX(-50%); /* Center the tail relative to its left position */
    width: 0;
    height: 0;
    border-left: 15px solid transparent; /* Tail width */
    border-right: 15px solid transparent; /* Tail width */
    border-top: 15px solid var(--box-border-color); /* Solid black fill for the tail */
    z-index: 1; /* Ensure it's visible */
}


/* Checklist Box Design */
.checklist-box-type {
    /* Removed padding here */
}
.checklist-box-type .content.checklist-layout {
    display: flex;
    flex-direction: row; /* 좌우 분할 */
    align-items: stretch; /* 높이를 채우도록 */
    justify-content: space-between;
    padding: 0; /* No padding on this content div, children apply their own */
    height: 100%; /* Ensure content fills the box */
}

.checklist-text-area {
    flex: 1; /* 남은 공간을 차지 */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 10px; /* 내부 패딩 조정 */
    text-align: center;
}

.separator {
    width: var(--border-width); /* 구분선 두께 */
    background-color: var(--box-border-color); /* 구분선 색상 */
    height: 100%; /* 박스 끝부터 끝까지 이어지도록 */
    align-self: stretch; /* 부모 flex 컨테이너의 전체 높이를 채우도록 */
}

.checklist-items-area {
    flex: 1; /* 남은 공간을 차지 */
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 10px; /* 내부 패딩 조정 */
}

.checklist-items-area ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.checklist-items-area li {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
}
.checklist-items-area li:last-child {
    margin-bottom: 0;
}

/* Custom Checkbox Design (Changed to black square fill, improved size and alignment) */
input[type="checkbox"] {
    display: none; /* Hide default checkbox */
}

.custom-checkbox {
    position: relative;
    padding-left: 25px; /* Space for custom checkbox */
    cursor: pointer;
    line-height: 1.2; /* Adjust line-height for better vertical alignment */
    display: flex; /* Use flexbox for label content alignment */
    align-items: center;
    min-height: 16px; /* Ensure minimum height for alignment */
    width: fit-content; /* Prevent label from taking full width and misaligning */
}

.custom-checkbox::before {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 16px; /* Size of custom checkbox */
    height: 16px;
    background-color: var(--box-bg-color); /* White background */
    border: var(--border-width) solid var(--box-border-color); /* Black border */
    display: block;
}

input[type="checkbox"]:checked + .custom-checkbox::before {
    background-color: var(--box-content-color); /* Fill with black when checked */
}


/* Font Size Classes */
.fs-36 { font-size: var(--fs-36); }
.fs-18 { font-size: var(--fs-18); }
.fs-14 { font-size: var(--fs-14); }
.fs-12 { font-size: var(--fs-12); }


/* --- ABOUT OVERLAY --- */
#about-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--overlay-bg-color);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    z-index: 1001;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 5%;
}
.about-content {
    max-width: 800px;
    padding: 40px;
    background-color: var(--box-bg-color);
    border: var(--border-width) solid var(--box-border-color);
    color: var(--overlay-text-color);
    position: relative;
}
.dark-mode .about-content {
    background-color: transparent; /* Overlay bg handles color */
    border: var(--border-width) solid var(--overlay-text-color);
}
#close-about-button {
    position: absolute;
    top: 10px;
    right: 10px;
    background: none;
    border: none;
    font-size: var(--fs-14);
    color: var(--overlay-text-color);
    cursor: pointer;
}
.about-content h2 {
    font-size: var(--fs-36);
    margin-bottom: 20px;
}
.about-content p {
    font-size: var(--fs-18);
    line-height: 1.6;
    margin-bottom: 15px;
}

/* --- VERSION INDICATOR (Hover UI Fixed) --- */
#version-indicator {
    position: fixed;
    bottom: 20px;
    left: 20px;
    height: var(--button-height-sm);
    padding: 0 15px;
    border: var(--border-width) solid var(--box-content-color);
    color: var(--box-content-color);
    background-color: transparent;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--fs-14);
    z-index: 1000;
    cursor: default;
}

/* Make sure .info-box inherits box styles and is initially hidden */
#version-indicator .info-box {
    display: none; /* Hidden by default */
    position: absolute;
    bottom: calc(100% + 10px); /* Position above the indicator */
    left: calc(0px - var(--border-width)); /* Align with parent's outer left border */
    width: 300px;
    background-color: var(--box-bg-color); /* Match box background */
    border: var(--border-width) solid var(--box-border-color); /* Match box border */
    padding: 15px;
    color: var(--box-content-color); /* Match box content color */
    font-size: var(--fs-14);
    text-align: left;
    z-index: 1002; /* Ensure it's above other elements if necessary */
}
#version-indicator:hover .info-box {
    display: block; /* Show on hover */
}
.info-box h4 {
    font-size: var(--fs-18);
    margin-bottom: 10px;
}
.info-box ul {
    list-style: none;
    padding-left: 0; /* Remove default list padding */
    margin-bottom: 10px;
}
.info-box li {
    font-size: var(--fs-14);
    margin-bottom: 5px;
    padding-left: 10px; /* Custom indent for list items */
    position: relative;
}
.info-box li::before {
    content: '- '; /* Simple bullet point */
    position: absolute;
    left: 0;
    top: 0;
}
.info-box ul:last-child { /* Remove margin-bottom for the last ul */
    margin-bottom: 0;
}


/* --- FOOTER --- */
.site-footer-bottom {
    position: fixed;
    bottom: 0;
    width: 100%;
    text-align: center;
    padding: 10px;
    font-size: var(--fs-14);
    color: var(--text-color);
    z-index: 1;
}


/* --- GUESTBOOK INPUT AREA --- */
.guestbook-input-container {
    position: fixed;
    bottom: calc(var(--button-height-sm) + 20px); /* Footer height (32px) + 20px bottom padding */
    left: 0;
    width: 100%;
    padding: 10px 20px; /* General padding */
    display: flex;
    align-items: flex-end; /* 하단 정렬 */
    background-color: var(--bg-color); /* 배경색은 사이트 배경색 따름 */
    border-top: var(--border-width) solid var(--box-border-color); /* 상단 구분선 */
    z-index: 900; /* Header, About보다 아래, Footer보다 위 */
}

.guestbook-input-container textarea {
    flex-grow: 1; /* 남은 공간 모두 차지 */
    min-height: var(--button-height-lg); /* 최소 높이 48px */
    max-height: 150px; /* 최대 높이 제한 */
    padding: 10px;
    margin-right: 10px;
    background-color: var(--box-bg-color);
    border: var(--border-width) solid var(--box-border-color);
    color: var(--box-content-color);
    font-family: var(--font-family);
    font-weight: var(--font-weight);
    font-stretch: var(--font-stretch-value);
    resize: none; /* 사용자 임의 크기 조절 방지, JS로 제어 */
    overflow: hidden; /* 스크롤바 숨김 */
    line-height: 1.2; /* 텍스트 라인 높이 */
}

.guestbook-input-container textarea::placeholder {
    color: rgba(0, 0, 0, 0.5); /* Placeholder text color */
}
.dark-mode .guestbook-input-container textarea::placeholder {
    color: rgba(255, 255, 255, 0.5);
}

.input-controls {
    display: flex;
    flex-direction: column;
    align-items: flex-end; /* 우측 정렬 */
    justify-content: space-between; /* 버튼과 글자 수 카운터 분리 */
    height: var(--button-height-lg); /* textarea의 min-height에 맞춤 */
}

#char-count {
    color: #7F7F7F; /* 회색의 작은 글씨 */
    margin-bottom: 5px; /* 버튼과의 간격 */
}

#drop-it-button {
    height: var(--button-height-lg); /* 버튼 높이 48px */
    width: 100px; /* 고정 너비 */
    padding: 0; /* 내부 패딩 제거 */
    font-size: var(--fs-18);
}

.guestbook-message {
    position: absolute;
    bottom: calc(100% + 5px); /* Input container 위 */
    left: 20px;
    right: 20px;
    background-color: var(--box-bg-color);
    border: var(--border-width) solid var(--box-border-color);
    color: var(--box-content-color);
    padding: 10px;
    text-align: center;
    z-index: 901;
}

/* --- UTILITY --- */
.hidden {
    display: none !important;
}